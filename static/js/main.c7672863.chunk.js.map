{"version":3,"sources":["components/NavBar/NavBar.tsx","api.ts","components/Loader/Loader.tsx","variables.ts","types/Person.ts","components/PersonLink/PersonLink.tsx","components/PersonInfo/PersonInfo.tsx","components/PeopleList/PeopleList.tsx","components/PeoplePage/PeoplePage.tsx","components/utils/PreparedPeople.ts","components/HomePage/HomePage.tsx","components/PageNotFound/PageNotFound.tsx","App.tsx","index.tsx"],"names":["getLinkClass","isActive","classNames","NavBar","className","role","to","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","COLUMN_NAMES","Sex","PersonLink","person","slug","sex","name","cn","Female","PersonInfo","personSlug","useParams","born","died","fatherName","motherName","father","mother","PeopleList","people","map","value","PeoplePage","useState","setPeople","isLoading","setIsLoading","errorMessage","setErrorMessage","useEffect","currentPeople","find","mom","dad","getPreparedPeople","catch","finally","peopleLoadingError","noPeopleMessage","length","HomePage","PageNotFound","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.c7672863.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nconst getLinkClass = (\n  { isActive }: { isActive: boolean },\n) => classNames('navbar-item', {\n  'has-background-grey-lighter': isActive,\n});\n\nexport const NavBar = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink className={getLinkClass} to=\"/\">\n          Home\n        </NavLink>\n\n        <NavLink\n          className={getLinkClass}\n          to=\"/people\"\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","export const NOT_PARENTS_NAME = '-';\nexport const COLUMN_NAMES = [\n  'Name',\n  'Sex',\n  'Born',\n  'Died',\n  'Mother',\n  'Father',\n];\n","export interface Person {\n  name: string,\n  sex: string,\n  born: number,\n  died: number,\n  fatherName: string | null,\n  motherName: string | null,\n  slug: string,\n  mother?: Person,\n  father?: Person,\n}\n\nexport enum Sex {\n  Male = 'm',\n  Female = 'f',\n}\n","import cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person, Sex } from '../../types';\n\ntype Props = {\n  person: Person\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const {\n    slug,\n    sex,\n    name,\n  } = person;\n\n  return (\n    <Link\n      to={`../${slug}`}\n      className={cn({\n        'has-text-danger': sex === Sex.Female,\n      })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import cn from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\nimport { NOT_PARENTS_NAME } from '../../variables';\n\ntype Props = {\n  person: Person\n};\n\nexport const PersonInfo: React.FC<Props> = ({ person }) => {\n  const { personSlug } = useParams();\n  const {\n    sex,\n    born,\n    died,\n    fatherName,\n    motherName,\n    father,\n    mother,\n    slug,\n  } = person;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={cn({\n        'has-background-warning': personSlug === slug,\n      })}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n\n      <td>\n        {mother ? (\n          <PersonLink person={mother} />\n        ) : (\n          motherName || NOT_PARENTS_NAME\n        )}\n      </td>\n\n      <td>\n        {father ? (\n          <PersonLink person={father} />\n        ) : (\n          fatherName || NOT_PARENTS_NAME\n        )}\n      </td>\n    </tr>\n  );\n};\n","import { Person } from '../../types';\nimport { COLUMN_NAMES } from '../../variables';\nimport { PersonInfo } from '../PersonInfo';\n\ntype Props = {\n  people: Person[],\n};\n\nexport const PeopleList: React.FC<Props> = ({ people }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {COLUMN_NAMES.map(value => (\n            <th>{value}</th>\n          ))}\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonInfo\n            person={person}\n            key={person.slug}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\nimport { Loader } from '../Loader';\nimport { getPreparedPeople } from '../utils/PreparedPeople';\nimport { PeopleList } from '../PeopleList/PeopleList';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then(currentPeople => {\n        setPeople(getPreparedPeople(currentPeople));\n      })\n      .catch(() => {\n        setErrorMessage(true);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  const peopleLoadingError = errorMessage && !isLoading;\n  const noPeopleMessage = !people.length && !isLoading && !errorMessage;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && (\n            <Loader />\n          )}\n\n          {peopleLoadingError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {noPeopleMessage && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {!!people.length && (\n            <PeopleList people={people} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Person } from '../../types';\n\nexport const getPreparedPeople = (people: Person[]) => (\n  people.map(person => ({\n    ...person,\n    mother: people.find(mom => mom.name === person.motherName),\n    father: people.find(dad => dad.name === person.fatherName),\n  }))\n);\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const PageNotFound = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { NavBar } from './components/NavBar';\nimport { PeoplePage } from './components/PeoplePage';\nimport { HomePage } from './components/HomePage';\nimport { PageNotFound } from './components/PageNotFound';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <NavBar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"..\" replace />} />\n          <Route path=\"/people\">\n            <Route path=\":personSlug?\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<PageNotFound />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}