{"version":3,"sources":["components/NavBar/NavBar.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PersonInfo/PersonInfo.tsx","components/PeoplePage/PeoplePage.tsx","components/HomePage/HomePage.tsx","components/PageNotFound/PageNotFound.tsx","App.tsx","index.tsx"],"names":["getLinkClass","isActive","classNames","NavBar","className","role","to","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","slug","sex","name","cn","PersonInfo","personSlug","useParams","born","died","fatherName","motherName","father","mother","PeoplePage","useState","people","setPeople","isLoading","setIsLoading","errorMessage","setErrorMessage","useEffect","currentPeople","map","find","mom","dad","findParents","catch","finally","length","HomePage","PageNotFound","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.4d28d322.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nconst getLinkClass = (\n  { isActive }: { isActive: boolean },\n) => classNames('navbar-item', {\n  'has-background-grey-lighter': isActive,\n});\n\nexport const NavBar = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink className={getLinkClass} to=\"/\">\n          Home\n        </NavLink>\n\n        <NavLink\n          className={getLinkClass}\n          to=\"/people\"\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const {\n    slug,\n    sex,\n    name,\n  } = person;\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={cn({\n        'has-text-danger': sex === 'f',\n      })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import cn from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  person: Person\n};\n\nexport const PersonInfo: React.FC<Props> = ({ person }) => {\n  const { personSlug } = useParams();\n  const {\n    sex,\n    born,\n    died,\n    fatherName,\n    motherName,\n    father,\n    mother,\n    slug,\n  } = person;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={cn({\n        'has-background-warning': personSlug === slug,\n      })}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n\n      <td>\n        {mother ? (\n          <PersonLink person={mother} />\n        ) : (\n          motherName || '-'\n        )}\n      </td>\n\n      <td>\n        {father ? (\n          <PersonLink person={father} />\n        ) : (\n          fatherName || '-'\n        )}\n      </td>\n    </tr>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\nimport { Loader } from '../Loader';\nimport { PersonInfo } from '../PersonInfo';\n\nconst findParents = (people: Person[]) => (\n  people.map(person => ({\n    ...person,\n    mother: people.find(mom => mom.name === person.motherName),\n    father: people.find(dad => dad.name === person.fatherName),\n  }))\n);\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then(currentPeople => {\n        setPeople(findParents(currentPeople));\n      })\n      .catch(() => {\n        setErrorMessage(true);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && (\n            <Loader />\n          )}\n          {(errorMessage && !isLoading) && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {(!people.length && !isLoading && !errorMessage) && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {(!!people.length) && (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {people.map(person => (\n                  <PersonInfo\n                    person={person}\n                    key={person.slug}\n                  />\n                ))}\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const PageNotFound = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { NavBar } from './components/NavBar';\nimport { PeoplePage } from './components/PeoplePage';\nimport { HomePage } from './components/HomePage';\nimport { PageNotFound } from './components/PageNotFound';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <NavBar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"..\" replace />} />\n          <Route path=\"/people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":personSlug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<PageNotFound />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}